TEST_CASE("insert element at specific position and erase it at position", "[list_insert_erase]") {
  List<int> list{};
  
  list.push_front(9); 
  list.push_back(13);
  
  ListIterator<int> it1{list.end()};
  ListIterator<int> it{list.begin()};
  list.insert(it,3);

  auto first_pointer = get_first_pointer(list);
  auto last_pointer  = get_last_pointer(list); 

  //INSERT TEST 
  auto begin_it = list.begin();
  
  SECTION("First node should be 3") {
    REQUIRE(3 == begin_it.node->value);
  }

  it++;
  auto second_it = ++begin_it;
  
  SECTION("Second node should be 9"){
    REQUIRE(9 == second_it.node->value);
  }

  list.insert(it,7);
  auto third_it = ++second_it;
  
  SECTION("third node should be 7"){
    REQUIRE(7 == third_it.node->value);
  }

  auto fourth_it = ++third_it;
  
  SECTION("fourth node should be 13"){
    REQUIRE(13 == fourth_it.node->value);
  }

  SECTION("first and last pointer test"){
    REQUIRE(3 == first_pointer->value);
    REQUIRE(13 == last_pointer->value);
  }

  list.insert(it1,2);
  auto fith_it = ++fourth_it;

  SECTION("last pointer test should be 2"){
    REQUIRE(2 == fith_it.node->value);
    REQUIRE(2 == get_last_pointer(list)->value);
  }
  
}